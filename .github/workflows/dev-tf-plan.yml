name: Dev - Terraform Plan
on:
  pull_request:
    branches:
      - dev
    paths:
      - 'dev/**'
      - '.github/workflows/dev-tf-plan.yml'

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  dev_terraform_plan:
    environment:
      name: Development
    env:
      tf_version: '1.10.2'
      tf_dir: 'dev'

    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./dev

    if: github.event.pull_request.state != 'approved'
    steps:
      - id: checkout_latest
        name: Checkout latest
        uses: actions/checkout@v4

      - id: checkout_common_action
        name: Checkout latest
        uses: actions/checkout@v4
        with:
          repository: Innovate-Future-Foundation/terraform-bootstrap
          path: common

      # 替换认证方式
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      # 保留原有Terraform配置步骤
      - id: tf_prep
        name: Terraform setup
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_FRONTEND_STATE_BUCKET }}" \
            -backend-config="key=dev/terraform.tfstate" \
            -backend-config="region=${{ secrets.TF_FRONTEND_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_FRONTEND_LOCKID_TABLE }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # 后续步骤保持不变
      - id: tf_plan
        name: Terraform Plan
        run: terraform plan -out .planfile
        env:
          TF_VAR_location: ${{ secrets.AWS_REGION }}
          TF_VAR_dev_account: ${{ secrets.AWS_DEV_ACCOUNT }}
          TF_VAR_staging_account: ${{ secrets.AWS_STAGING_ACCOUNT }}
          TF_VAR_prod_account: ${{ secrets.AWS_PROD_ACCOUNT }}

      - id: post_comment
        name: Post Terraform Plan to PR
        uses: borchero/terraform-plan-comment@v2
        with:
          working-directory: ${{ env.tf_dir }}
          token: ${{ secrets.GITHUB_TOKEN }}
          planfile: .planfile

      - name: Upload Plan to S3
        run: |
          aws s3 cp .planfile s3://${{ secrets.WORKFLOW_TEMP_BUCKET }}/plans/plan-${{ github.event.pull_request.number }}_${{ env.tf_dir }}
          echo "Plan uploaded to S3"